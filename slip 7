Q1.write a java program that take input as a person name in the format of first, middle and last name and then print it in the form list, first and middle name, where in the middle name first character is capital letter.
import java.util.Scanner;

public class NameFormatter {
    public static void main(String[] args) {
        // Create a Scanner object to take input
        Scanner scanner = new Scanner(System.in);

        // Prompt the user to enter the full name (First, Middle, Last)
        System.out.print("Enter the full name (First Middle Last): ");
        String fullName = scanner.nextLine();

        // Split the input into parts (first, middle, and last names)
        String[] nameParts = fullName.trim().split("\\s+");

        String firstName = "";
        String middleName = "";
        String lastName = "";

        // Handle different cases based on the number of parts in the name
        if (nameParts.length == 3) {
            firstName = nameParts[0];
            middleName = nameParts[1];
            lastName = nameParts[2];
        } else if (nameParts.length == 2) {
            firstName = nameParts[0];
            lastName = nameParts[1];
        } else if (nameParts.length == 1) {
            firstName = nameParts[0];
        } else {
            System.out.println("Invalid input! Please enter a name in the format: First Middle Last");
            return;
        }

        // Capitalize the first letter of the middle name if it exists
        if (!middleName.isEmpty()) {
            middleName = middleName.substring(0, 1).toUpperCase() + middleName.substring(1).toLowerCase();
        }

        // Display the name in the format: Last, First Middle
        System.out.println("Formatted Name: " + lastName + ", " + firstName + " " + middleName);

        // Close the scanner
        scanner.close();
    }
}

Q2.define class EmailId with members ,username and password. Define default and parameterized constructors. Accept values form the command line throw user defined exceptions-"invalidUsernameException" or "invalidPasswordException" if the username and password are invalid.
import java.util.Scanner;

// Custom Exception for invalid username
class InvalidUsernameException extends Exception {
    public InvalidUsernameException(String message) {
        super(message);
    }
}

// Custom Exception for invalid password
class InvalidPasswordException extends Exception {
    public InvalidPasswordException(String message) {
        super(message);
    }
}

// EmailId class definition
class EmailId {
    private String username;
    private String password;

    // Default constructor
    public EmailId() {
        this.username = "";
        this.password = "";
    }

    // Parameterized constructor
    public EmailId(String username, String password) throws InvalidUsernameException, InvalidPasswordException {
        // Validate username and password
        if (!isValidUsername(username)) {
            throw new InvalidUsernameException("Invalid Username: Username must contain '@' and be at least 5 characters long.");
        }

        if (!isValidPassword(password)) {
            throw new InvalidPasswordException("Invalid Password: Password must be at least 8 characters long and contain at least one digit.");
        }

        // If valid, initialize username and password
        this.username = username;
        this.password = password;
    }

    // Method to check if the username is valid
    private boolean isValidUsername(String username) {
        // Username should contain '@' and be at least 5 characters long
        return username.contains("@") && username.length() >= 5;
    }

    // Method to check if the password is valid
    private boolean isValidPassword(String password) {
        // Password should be at least 8 characters long and contain at least one digit
        return password.length() >= 8 && password.matches(".*\\d.*");
    }

    // Display the email information
    public void display() {
        System.out.println("Username: " + username);
        System.out.println("Password: " + password);
    }
}

// Main class to test the program
public class EmailTest {
    public static void main(String[] args) {
        // Create a scanner to accept input
        Scanner scanner = new Scanner(System.in);

        // Accept username and password from the command line
        System.out.print("Enter username: ");
        String username = scanner.nextLine();

        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        try {
            // Create an object of EmailId with the provided values
            EmailId emailId = new EmailId(username, password);

            // Display the email details
            emailId.display();

        } catch (InvalidUsernameException | InvalidPasswordException e) {
            // Handle the custom exceptions and display appropriate messages
            System.out.println(e.getMessage());
        }

        // Close the scanner
        scanner.close();
    }
}
