import java.util.Scanner;

public class Rectangle {
    public static void main(String[] args) {
        // Create a Scanner object for input
        Scanner scanner = new Scanner(System.in);

        // Input length and width of the rectangle
        System.out.print("Enter the length of the rectangle: ");
        double length = scanner.nextDouble();

        System.out.print("Enter the width of the rectangle: ");
        double width = scanner.nextDouble();

        // Calculate area and perimeter
        double area = length * width;
        double perimeter = 2 * (length + width);

        // Output the results
        System.out.println("Area of the rectangle: " + area);
        System.out.println("Perimeter of the rectangle: " + perimeter);

        // Close the scanner
        scanner.close();
    }
}

Q.2
import java.util.Scanner;

// Abstract class Order
abstract class Order {
    protected int id;
    protected String description;

    // Abstract methods to be implemented by subclasses
    public abstract void accept();
    public abstract void display();
}

// Subclass PurchaseOrder
class PurchaseOrder extends Order {
    private String vendorName;

    // Accept method to input details for PurchaseOrder
    @Override
    public void accept() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter Purchase Order ID: ");
        id = scanner.nextInt();
        scanner.nextLine();  // Consume newline

        System.out.print("Enter Purchase Order Description: ");
        description = scanner.nextLine();

        System.out.print("Enter Vendor Name: ");
        vendorName = scanner.nextLine();
    }

    // Display method to output PurchaseOrder details
    @Override
    public void display() {
        System.out.println("Purchase Order ID: " + id);
        System.out.println("Description: " + description);
        System.out.println("Vendor Name: " + vendorName);
        System.out.println();
    }
}

// Subclass SalesOrder
class SalesOrder extends Order {
    private String customerName;

    // Accept method to input details for SalesOrder
    @Override
    public void accept() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter Sales Order ID: ");
        id = scanner.nextInt();
        scanner.nextLine();  // Consume newline

        System.out.print("Enter Sales Order Description: ");
        description = scanner.nextLine();

        System.out.print("Enter Customer Name: ");
        customerName = scanner.nextLine();
    }

    // Display method to output SalesOrder details
    @Override
    public void display() {
        System.out.println("Sales Order ID: " + id);
        System.out.println("Description: " + description);
        System.out.println("Customer Name: " + customerName);
        System.out.println();
    }
}

// Main class to create objects and test
public class Main {
    public static void main(String[] args) {
        // Create 3 objects of PurchaseOrder
        PurchaseOrder[] purchaseOrders = new PurchaseOrder[3];
        for (int i = 0; i < 3; i++) {
            purchaseOrders[i] = new PurchaseOrder();
            System.out.println("Enter details for Purchase Order " + (i + 1) + ":");
            purchaseOrders[i].accept();
        }

        // Create 3 objects of SalesOrder
        SalesOrder[] salesOrders = new SalesOrder[3];
        for (int i = 0; i < 3; i++) {
            salesOrders[i] = new SalesOrder();
            System.out.println("Enter details for Sales Order " + (i + 1) + ":");
            salesOrders[i].accept();
        }

        // Display details of PurchaseOrders
        System.out.println("\nPurchase Orders:");
        for (PurchaseOrder po : purchaseOrders) {
            po.display();
        }

        // Display details of SalesOrders
        System.out.println("Sales Orders:");
        for (SalesOrder so : salesOrders) {
            so.display();
        }
    }
}

