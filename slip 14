Q2.create an abstract class "order" having members id, description. Create two subclasses "purchase order" and "sales order" having members customer name and vendor name respectively. Define methods accept and display in all cases. Create 3 objects each of purchase order and sales order and accept and display details
import java.util.Scanner;

// Abstract class Order
abstract class Order {
    int id;
    String description;

    // Constructor for initializing id and description
    public Order(int id, String description) {
        this.id = id;
        this.description = description;
    }

    // Abstract methods for accepting and displaying details
    abstract void accept();
    abstract void display();
}

// Subclass PurchaseOrder with additional member customerName
class PurchaseOrder extends Order {
    String customerName;

    // Constructor to initialize PurchaseOrder
    public PurchaseOrder(int id, String description) {
        super(id, description);
    }

    // Accept details from user
    @Override
    void accept() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter Customer Name: ");
        customerName = scanner.nextLine();
    }

    // Display the details
    @Override
    void display() {
        System.out.println("Purchase Order Details:");
        System.out.println("ID: " + id + ", Description: " + description + ", Customer: " + customerName);
    }
}

// Subclass SalesOrder with additional member vendorName
class SalesOrder extends Order {
    String vendorName;

    // Constructor to initialize SalesOrder
    public SalesOrder(int id, String description) {
        super(id, description);
    }

    // Accept details from user
    @Override
    void accept() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter Vendor Name: ");
        vendorName = scanner.nextLine();
    }

    // Display the details
    @Override
    void display() {
        System.out.println("Sales Order Details:");
        System.out.println("ID: " + id + ", Description: " + description + ", Vendor: " + vendorName);
    }
}

// Main class to test the program
public class OrderTest {
    public static void main(String[] args) {
        // Create arrays to store 3 objects each of PurchaseOrder and SalesOrder
        PurchaseOrder[] purchaseOrders = new PurchaseOrder[3];
        SalesOrder[] salesOrders = new SalesOrder[3];

        Scanner scanner = new Scanner(System.in);

        // Create and accept details for 3 PurchaseOrder objects
        System.out.println("Enter details for 3 Purchase Orders:");
        for (int i = 0; i < 3; i++) {
            System.out.print("\nEnter ID for Purchase Order " + (i + 1) + ": ");
            int id = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            System.out.print("Enter Description: ");
            String description = scanner.nextLine();
            purchaseOrders[i] = new PurchaseOrder(id, description);
            purchaseOrders[i].accept();
        }

        // Create and accept details for 3 SalesOrder objects
        System.out.println("\nEnter details for 3 Sales Orders:");
        for (int i = 0; i < 3; i++) {
            System.out.print("\nEnter ID for Sales Order " + (i + 1) + ": ");
            int id = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            System.out.print("Enter Description: ");
            String description = scanner.nextLine();
            salesOrders[i] = new SalesOrder(id, description);
            salesOrders[i].accept();
        }

        // Display all PurchaseOrder details
        System.out.println("\nPurchase Orders:");
        for (PurchaseOrder po : purchaseOrders) {
            po.display();
        }

        // Display all SalesOrder details
        System.out.println("\nSales Orders:");
        for (SalesOrder so : salesOrders) {
            so.display();
        }

        scanner.close();
    }
}
